┌─── MAIN ──────────────────────────────────────
│
├─┬─ Check if a file is uploaded
│ └─┬─ Check if the uploaded file has a `.tpy` extension
│   └─┬─ Open file for reading as `var`
│      └─┬─ Create AST tree from source with step into `parse_source`
│         ├─┬─ Start parsing new syntax to old with step into `preprocess_source`
│         │ └── Replace all syntax by the queue from `preprocess_source`
│         └─┬─ Step out to `parse_source` from `preprocess_source` with new `var`
│           └── Parse the entire tree using the AST library
│               └── Perform standard AST permutations
│───────────────────────────────────────────────
├─┬─ Step out to `main` from `parse_source`
│ └─┬─ Start compiling code with the `exec` flag
│   └─┬─ Create runtime environment with step into `FILE` runtime (imports variables):
│      ├─┬─ `type_checked()`
│      │ ├── Take all annotations from functions as a dictionary
│      │ ├── Get the full signature of the function
│      │ ├── Check if all arguments are provided
│      │ └── Check if the function returns a value
│      │─────────────────────────────────────────
│      ├─┬─ `__type_check__()`
│      │ └── Check the type of a variable
│      │─────────────────────────────────────────
│      ├─┬─ `__assert_type__()`
│      │ └── Check the type of a variable (release after check)
│      │─────────────────────────────────────────
│      ├─┬─ `__readonly_check__()`
│      │ ├── Use `__type_check__()` for validation
│      │ └── Add variable to a set as `const`
│      │─────────────────────────────────────────
│      ├─┬─ `implements()`
│      │ ├── Check if the parent class has an `__init__` method
│      │ ├── Create a custom `__init__` method to replace the old one
│      │ └── Check each interface to verify that all methods or variables are implemented
│      │─────────────────────────────────────────
│      ├── `inspect` (Standard library to extend from)
│      ├── Set the main module name to `__main__`
│      └── `Optional()` (Standard library to extend from)
│───────────────────────────────────────────────
└─┬─ Run code with the new environment