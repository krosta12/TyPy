#use strict
#
## Пример type alias
#type MyInt = int
#
## Пример кастомного enum
#enum Color:
#    Red,
#    Green,
#    Blue
#
## Пример TS-TPY интерфейса
#interface IPoint:
#    x: int
#    y: int
#
## Имплементационная логика
#class Point implements IPoint:
#    private x: int
#    private y: int
#
#    def __init__(self, x: int, y: int) -> None:
#        self.x = x
#        self.y = y
#
#    def get_x(self) -> int:
#        return self.x
#
#    def get_y(self) -> int:
#        return self.y
#
## Пример readonly и optional
#readonly count: int = 5
#value?: int = 10
#
## Пример приведения типа
#a = 123 as int
#
#print("Enum Color.Green =", Color.Green)
#p = Point(10, 20)
#print("Point:", p.get_x(), p.get_y())
#print("Readonly count =", count)
#print("Optional value =", value)



use strict

interface Vector:
    x: int
    y: int
    #create_var_error: int passed
    def get_vector(self): pass
    #def create_compile_error(self): pass passed
    

class Point implements Vector:
    def __init__(self,x,y):
        self.x = x
        self.y =y 
    def get_vector(self): 
        print("hihi")

p = Point(1, 2)
